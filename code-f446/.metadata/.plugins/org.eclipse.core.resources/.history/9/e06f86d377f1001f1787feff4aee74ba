/*
 * hc-sr04.c
 *
 *  Created on: Feb 23, 2025
 *      Author: user
 */

#include "hc-sr04.h"
#include "basic.h"

void Trigger_HCSR04()
{
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_SET);
	HAL_Delay(1);
	HAL_GPIO_WritePin(GPIOA, GPIO_PIN_9, GPIO_PIN_RESET);
}


uint8_t is_capture_done;
uint32_t rising_time;
uint32_t falling_time;

// TIM1 CC 인터럽트 핸들러
void HAL_TIM_IC_CaptureCallback(TIM_HandleTypeDef *htim)
{
	if (htim->Instance == TIM1 && htim->Channel == HAL_ACTIVE_CHANNEL_1)
	{
		if ((TIM1_CCER & TIM_CCER_CC1P) == 0)	// Rising Edge 감지
		{
			rising_time = HAL_TIM_ReadCaptureValue(htim, TIM_CHANNEL_1);
			// 다음에 Falling Edge 감지
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_FALLING);
		}
		else	// Falling Edge 감지
		{
			falling_time = HAL_TIM_ReadCaptureValue(htim, TIM_CHANNEL_1);
			// 다음에 Rising Edge 감지
			__HAL_TIM_SET_CAPTUREPOLARITY(htim, TIM_CHANNEL_1, TIM_INPUTCHANNELPOLARITY_RISING);
			is_capture_done = 1;
		}
	}
}

// 거리 계산
uint32_t Calculate_Distance()
{
	if (falling_time > rising_time)
	{
		uint32_t pulse_width = falling_time - rising_time;
		return (pulse_width * 0.0343) / 2;	// cm단위
	}
	return 0;
}


void RunSonicSensor()
{
	Trigger_HCSR04();
	HAL_Delay(100);

	if (is_capture_done)
	{
		uint32_t distance = Calculate_Distance();
		printf("Distance: %lu cm\r\n", distance);
		is_capture_done = 0;
	}
}
