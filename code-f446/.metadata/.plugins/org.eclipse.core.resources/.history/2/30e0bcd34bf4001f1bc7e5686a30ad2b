/*
 * led.c
 *
 *  Created on: Feb 26, 2025
 *      Author: user
 */

#include "led.h"





void ToggleRunLed()
{
	HAL_GPIO_TogglePin(GPIOA, GPIO_PIN_5);
}

uint32_t tm_run_led = 0;
uint32_t run_led_interval = 500;

void ChangeRunLed()
{
	if (GetElapsedTick(tm_run_led) >= run_led_interval)
	{
		tm_run_led = HAL_GetTick();
		ToggleRunLed();
	}
}


void TurnRedLed(uint8_t value)
{
	if (value)
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, 1);
	else
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, 0);
}

void TurnGreenLed(uint8_t value)
{
	if (value)
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, 1);
	else
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, 0);
}

void TurnBlueLed(uint8_t value)
{
	if (value)
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, 1);
	else
		HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, 0);
}




uint8_t rgb_led;	// bit0:Red, bit1:Green, bit2:Blue, bit3:Blink
uint32_t tm_rgb_led_blink;
uint8_t rgb_led_toggle;
uint8_t rgb_led_out;

void ChangeRgbLed()
{
	uint8_t rgb = rgb_led & 0x07;

	// Blink
	if (rgb_led & 0x08)
	{
		if (GetElapsedTick(tm_rgb_led_blink) >= 500)
		{
			tm_rgb_led_blink = HAL_GetTick();
			rgb_led_toggle = (rgb_led_toggle + 1) % 2;

			if (rgb_led_toggle)
				rgb = 0;
			else
				rgb = rgb_led & 0x07;
		}
		else
			rgb = rgb_led_out;
	}

	if (rgb != rgb_led_out)
	{
		// Red
		if (rgb & 0x01)
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, 1);
		else
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_10, 0);

		// Green
		if (rgb & 0x02)
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, 1);
		else
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_1, 0);

		// Blue
		if (rgb & 0x04)
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, 1);
		else
			HAL_GPIO_WritePin(GPIOB, GPIO_PIN_2, 0);

		rgb_led_out = rgb;
	}
}


void InitLedWork()
{
}


void DoLedWork()
{
	ChangeRunLed();
	ChangeRgbLed();
}
